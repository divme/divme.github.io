一、闭包的特点：
　　1. 作为一个函数变量的一个引用，当函数返回时，其处于激活状态。
　　2. 一个闭包就是当一个函数返回时，一个没有释放资源的栈区。

二、关于闭包的三个要点：

1、当内层函数引用了包围它的外层函数体内的变量时，就形成了闭包的一种形式。

    原因分析：一般情况下，函数执行完毕后，函数作用域内的变量所占的内存会被回收  （或说释放）从而使局部变量失去作用。但因为内层函数还需要外层函数的变量  （message），所以该变量（message）即使在外层函数执行完毕后也不能马上释放，否则内层函数将得不到正确的值或引用。

2、闭包可以避免大量使用全局变量的现象（匿名自执行函数）
   
     因为在javascript中，变量的作用域是函数范围内。所以我们可以这样做：把变量声明在一个自执行函数之内，然后在这个自执行函数内利用另一个函数来调用这个变量，这样这个变量不再是一个全局变量，但是它起到了与全局变量几乎相同的功效。下面是两段代码，第一段代码是使用全局变量实现，第二段代码是闭包形式：
 
     代码段一（message是一个全局变量，需要注意变量名是否被重复定义）：

     var message = 'hello,world';

     window.onunload = function() { alert( message ); }

     代码段二（message是一个局部变量，只需注意变量名在当前函数内是否重复定义）：

     (function() {

       var message = 'hello,world';

       window.onunload = function() { alert( message ); }

        })();

3、内层函数引用的是外层函数中变量的最终值，而不是初始值或中间变换的值。
  

三、Javascript闭包的用途：
  1、匿名自执行函数
  2、缓存
  3、实现封装
  4、实现面向对象中的对象
